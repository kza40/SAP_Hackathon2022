// Generated by view binder compiler. Do not edit!
package com.example.sap_social.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sap_social.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText eventDescriptionText;

  @NonNull
  public final EditText eventTitleText;

  @NonNull
  public final Button saveEventButton;

  private ActivityAddEventBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText eventDescriptionText, @NonNull EditText eventTitleText,
      @NonNull Button saveEventButton) {
    this.rootView = rootView;
    this.eventDescriptionText = eventDescriptionText;
    this.eventTitleText = eventTitleText;
    this.saveEventButton = saveEventButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.eventDescriptionText;
      EditText eventDescriptionText = ViewBindings.findChildViewById(rootView, id);
      if (eventDescriptionText == null) {
        break missingId;
      }

      id = R.id.eventTitleText;
      EditText eventTitleText = ViewBindings.findChildViewById(rootView, id);
      if (eventTitleText == null) {
        break missingId;
      }

      id = R.id.saveEventButton;
      Button saveEventButton = ViewBindings.findChildViewById(rootView, id);
      if (saveEventButton == null) {
        break missingId;
      }

      return new ActivityAddEventBinding((ConstraintLayout) rootView, eventDescriptionText,
          eventTitleText, saveEventButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
